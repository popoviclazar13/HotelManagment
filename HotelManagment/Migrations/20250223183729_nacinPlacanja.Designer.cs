// <auto-generated />
using System;
using HotelManagment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelManagment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250223183729_nacinPlacanja")]
    partial class nacinPlacanja
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelManagment.Entitys.Agencija", b =>
                {
                    b.Property<int>("agencijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("agencijaId"));

                    b.Property<string>("nazivAgencije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("agencijaId");

                    b.ToTable("Agencije");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Apartman", b =>
                {
                    b.Property<int>("apartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("apartmanId"));

                    b.Property<int>("brojSprata")
                        .HasColumnType("int");

                    b.Property<int>("kapacitetDeca")
                        .HasColumnType("int");

                    b.Property<int>("kapacitetOdrasli")
                        .HasColumnType("int");

                    b.Property<string>("nazivApartmana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tipApartmanaId")
                        .HasColumnType("int");

                    b.Property<bool>("zauzet")
                        .HasColumnType("bit");

                    b.Property<int>("zgradaId")
                        .HasColumnType("int");

                    b.HasKey("apartmanId");

                    b.HasIndex("tipApartmanaId");

                    b.HasIndex("zgradaId");

                    b.ToTable("Apartmani");
                });

            modelBuilder.Entity("HotelManagment.Entitys.ApartmanOprema", b =>
                {
                    b.Property<int>("apartmanOpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("apartmanOpremaId"));

                    b.Property<int>("apartmanId")
                        .HasColumnType("int");

                    b.Property<int>("kolicinaOpreme")
                        .HasColumnType("int");

                    b.Property<int>("opremaId")
                        .HasColumnType("int");

                    b.HasKey("apartmanOpremaId");

                    b.HasIndex("apartmanId");

                    b.HasIndex("opremaId");

                    b.ToTable("ApartmaniOprema");
                });

            modelBuilder.Entity("HotelManagment.Entitys.ApartmanPopust", b =>
                {
                    b.Property<int>("apartmanPopustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("apartmanPopustId"));

                    b.Property<int>("apartmanId")
                        .HasColumnType("int");

                    b.Property<int>("popustId")
                        .HasColumnType("int");

                    b.HasKey("apartmanPopustId");

                    b.HasIndex("apartmanId");

                    b.HasIndex("popustId");

                    b.ToTable("ApartmaniPopust");
                });

            modelBuilder.Entity("HotelManagment.Entitys.CenaApartmana", b =>
                {
                    b.Property<int>("cenaApartmanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cenaApartmanaId"));

                    b.Property<int>("apartmanId")
                        .HasColumnType("int");

                    b.Property<double>("cenaPoOsobi")
                        .HasColumnType("float");

                    b.Property<DateTime>("krajnjiDatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("pocetniDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("cenaApartmanaId");

                    b.HasIndex("apartmanId");

                    b.ToTable("CeneApartmana");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Korisnik", b =>
                {
                    b.Property<int>("korisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("korisnikId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imePrezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zemlja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("korisnikId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Oprema", b =>
                {
                    b.Property<int>("opremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("opremaId"));

                    b.Property<string>("nazivOprema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("opremaId");

                    b.ToTable("Opreme");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Popust", b =>
                {
                    b.Property<int>("popustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("popustId"));

                    b.Property<DateTime>("krajnjiDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("nazivPopusta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("pocetniDatum")
                        .HasColumnType("datetime2");

                    b.Property<double>("vrednost")
                        .HasColumnType("float");

                    b.HasKey("popustId");

                    b.ToTable("Pupusti");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Rezervacija", b =>
                {
                    b.Property<int>("rezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rezervacijaId"));

                    b.Property<int?>("agencijaId")
                        .HasColumnType("int");

                    b.Property<int>("apartmanId")
                        .HasColumnType("int");

                    b.Property<int>("brojGostiju")
                        .HasColumnType("int");

                    b.Property<double>("cenaKonacna")
                        .HasColumnType("float");

                    b.Property<string>("komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("korisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime>("krajnjiDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("nacinPlacanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("placeno")
                        .HasColumnType("bit");

                    b.Property<DateTime>("pocetniDatum")
                        .HasColumnType("datetime2");

                    b.Property<double>("ukupnaCena")
                        .HasColumnType("float");

                    b.HasKey("rezervacijaId");

                    b.HasIndex("agencijaId");

                    b.HasIndex("apartmanId");

                    b.HasIndex("korisnikId");

                    b.ToTable("Rezervacije");
                });

            modelBuilder.Entity("HotelManagment.Entitys.RezervacijaUsluga", b =>
                {
                    b.Property<int>("rezervacijaUslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rezervacijaUslugaId"));

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("kolicina")
                        .HasColumnType("int");

                    b.Property<int>("rezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("uslugaId")
                        .HasColumnType("int");

                    b.HasKey("rezervacijaUslugaId");

                    b.HasIndex("rezervacijaId");

                    b.HasIndex("uslugaId");

                    b.ToTable("RezervacijeUsluga");
                });

            modelBuilder.Entity("HotelManagment.Entitys.TipApartmana", b =>
                {
                    b.Property<int>("tipApartmanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tipApartmanaId"));

                    b.Property<string>("nazivTipaApartmana")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipApartmanaId");

                    b.ToTable("TipoviApartmana");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Usluga", b =>
                {
                    b.Property<int>("uslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uslugaId"));

                    b.Property<double>("cenaUsluge")
                        .HasColumnType("float");

                    b.Property<string>("nazivUsluge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uslugaId");

                    b.ToTable("Usluge");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Zgrada", b =>
                {
                    b.Property<int>("zgradaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("zgradaId"));

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("zgradaId");

                    b.ToTable("Zgrade");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Apartman", b =>
                {
                    b.HasOne("HotelManagment.Entitys.TipApartmana", "tipApartmana")
                        .WithMany("listaApartmana")
                        .HasForeignKey("tipApartmanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Entitys.Zgrada", "zgrada")
                        .WithMany("listaApartmana")
                        .HasForeignKey("zgradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tipApartmana");

                    b.Navigation("zgrada");
                });

            modelBuilder.Entity("HotelManagment.Entitys.ApartmanOprema", b =>
                {
                    b.HasOne("HotelManagment.Entitys.Apartman", "apartman")
                        .WithMany("listaApartmanOprema")
                        .HasForeignKey("apartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Entitys.Oprema", "oprema")
                        .WithMany("listaApartmanOprema")
                        .HasForeignKey("opremaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("apartman");

                    b.Navigation("oprema");
                });

            modelBuilder.Entity("HotelManagment.Entitys.ApartmanPopust", b =>
                {
                    b.HasOne("HotelManagment.Entitys.Apartman", "apartman")
                        .WithMany("listaApartmanPopust")
                        .HasForeignKey("apartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Entitys.Popust", "popust")
                        .WithMany("listaApartmanPopust")
                        .HasForeignKey("popustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("apartman");

                    b.Navigation("popust");
                });

            modelBuilder.Entity("HotelManagment.Entitys.CenaApartmana", b =>
                {
                    b.HasOne("HotelManagment.Entitys.Apartman", "apartman")
                        .WithMany("listaCeneApartmana")
                        .HasForeignKey("apartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("apartman");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Rezervacija", b =>
                {
                    b.HasOne("HotelManagment.Entitys.Agencija", "agencija")
                        .WithMany("listaRezervacija")
                        .HasForeignKey("agencijaId");

                    b.HasOne("HotelManagment.Entitys.Apartman", "apartman")
                        .WithMany("listaRezervacija")
                        .HasForeignKey("apartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Entitys.Korisnik", "korisnik")
                        .WithMany("listaRezervacija")
                        .HasForeignKey("korisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("agencija");

                    b.Navigation("apartman");

                    b.Navigation("korisnik");
                });

            modelBuilder.Entity("HotelManagment.Entitys.RezervacijaUsluga", b =>
                {
                    b.HasOne("HotelManagment.Entitys.Rezervacija", "rezervacija")
                        .WithMany("listaRezervacijaUsluga")
                        .HasForeignKey("rezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Entitys.Usluga", "usluga")
                        .WithMany("listaRezervacijaUsluga")
                        .HasForeignKey("uslugaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rezervacija");

                    b.Navigation("usluga");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Agencija", b =>
                {
                    b.Navigation("listaRezervacija");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Apartman", b =>
                {
                    b.Navigation("listaApartmanOprema");

                    b.Navigation("listaApartmanPopust");

                    b.Navigation("listaCeneApartmana");

                    b.Navigation("listaRezervacija");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Korisnik", b =>
                {
                    b.Navigation("listaRezervacija");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Oprema", b =>
                {
                    b.Navigation("listaApartmanOprema");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Popust", b =>
                {
                    b.Navigation("listaApartmanPopust");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Rezervacija", b =>
                {
                    b.Navigation("listaRezervacijaUsluga");
                });

            modelBuilder.Entity("HotelManagment.Entitys.TipApartmana", b =>
                {
                    b.Navigation("listaApartmana");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Usluga", b =>
                {
                    b.Navigation("listaRezervacijaUsluga");
                });

            modelBuilder.Entity("HotelManagment.Entitys.Zgrada", b =>
                {
                    b.Navigation("listaApartmana");
                });
#pragma warning restore 612, 618
        }
    }
}
